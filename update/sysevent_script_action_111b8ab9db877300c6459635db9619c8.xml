<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition_script/>
        <description/>
        <event_name>x_brig3_client_con.send_notification</event_name>
        <name>SendNotification</name>
        <order>100</order>
        <script><![CDATA[var clientConfRecord = new GlideRecord('x_brig3_client_con_client_configuration');
clientConfRecord.get(event.parm1);

var stage = event.parm2;

var clientID = gs.getProperty('x_brig3_client_con.ClientID');
var clientSecret = gs.getProperty('x_brig3_client_con.clientSecret');

var request = new sn_ws.RESTMessageV2('x_brig3_client_con.Unily - Get Token', 'Post Token');
var content1 = "grant_type=client_credentials&client_id="+clientID+"&client_secret="+clientSecret;
request.setRequestBody(content1);

var response = request.executeAsync();
var responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();
var status = response.getStatusCode();
this.json = new global.JSON().decode(responseBody);

if (status == 200){
	var bearerCode = 'Bearer '+this.json.access_token;
	var messageToRecipent = getMessage(event.parm2,clientConfRecord);
	var userRecipients = getRecipients(event.parm2,clientConfRecord);	
	gs.info('Message: ' + messageToRecipent + ' - ' + userRecipients);
	var requestNotification = new sn_ws.RESTMessageV2('x_brig3_client_con.Send Notification', 'Post Notification');
	requestNotification.setStringParameterNoEscape('authorization', bearerCode);
	requestNotification.setStringParameterNoEscape('message', messageToRecipent);
	requestNotification.setStringParameterNoEscape('user_recipients', userRecipients);
	
	var responseNotification = requestNotification.execute();
	var responseNotificationBody = responseNotification.getBody();
	var responseNotificationHttpStatus = responseNotification.getStatusCode();
	
	if (responseNotificationHttpStatus == 200){
		gs.info('STATUS2 OK');
	}
	else {
		gs.info('CALL TO https://unilysuccess-api-stg.unily.com/api/v1/notifications FAILED');
	}
}
else {
	gs.info('CALL TO https://unilysuccess-idsrv-stg.unily.com/connect/token FAILED');
}

function getMessage(stage,clientConfRecord) {
	if (stage == 'general'){
		return clientConfRecord.u_general_rejection_message;
	}
	if (stage == 'staging'){
		return clientConfRecord.u_staging_rejection_message;
	}
	if (stage == 'production'){
		return clientConfRecord.u_production_rejection_message;
	}
}

function getRecipients(stage,clientConfRecord) {
	if (stage == 'general'){
		return clientConfRecord.u_general_submitted_by;
	}
	if (stage == 'staging'){
		return clientConfRecord.u_staging_submitted_by;
	}
	if (stage == 'production'){
		return clientConfRecord.u_production_submitted_by;
	}
	
}]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>shay_temp</sys_created_by>
        <sys_created_on>2019-08-04 14:37:20</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>111b8ab9db877300c6459635db9619c8</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>SendNotification</sys_name>
        <sys_overrides/>
        <sys_package display_value="Client Configuration Overview" source="x_brig3_client_con">ae3a764fdb7e4300342ef3571d9619c5</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Client Configuration Overview">ae3a764fdb7e4300342ef3571d9619c5</sys_scope>
        <sys_update_name>sysevent_script_action_111b8ab9db877300c6459635db9619c8</sys_update_name>
        <sys_updated_by>shay_temp</sys_updated_by>
        <sys_updated_on>2019-08-05 12:57:30</sys_updated_on>
    </sysevent_script_action>
    <sys_translated_text action="delete_multiple" query="documentkey=111b8ab9db877300c6459635db9619c8"/>
</record_update>
